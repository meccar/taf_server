name: .NET Continuous Deployment
on:
  push:
    branches:
      - master
  workflow_run:
    workflows: [ ".NET Build" ]
    types:
      - completed

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/your-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/your-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/your-app:latest
          cache-to: type=inline
          
  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps - Dev
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: 'your-app-name-dev'
          resourceGroup: 'your-resource-group'
          imageToDeploy: your-username/your-app:${{ github.sha }}
          targetPort: 80
            
  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-production-url.com
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps - Prod
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: 'your-app-name-prod'
          resourceGroup: 'your-resource-group'
          imageToDeploy: your-username/your-app:${{ github.sha }}
          targetPort: 80